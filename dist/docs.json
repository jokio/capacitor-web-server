{
  "api": {
    "name": "JokWebServerPlugin",
    "slug": "jokwebserverplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "start",
        "signature": "(props: { publicFolderPath?: string; hostname?: string; port?: number; }) => Promise<boolean>",
        "parameters": [
          {
            "name": "props",
            "docs": "",
            "type": "{ publicFolderPath?: string | undefined; hostname?: string | undefined; port?: number | undefined; }"
          }
        ],
        "returns": "Promise<boolean>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "start"
      },
      {
        "name": "stop",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "stop"
      },
      {
        "name": "onRequest",
        "signature": "(callback: (props: { requestId: string; headers: Record<string, string>; method: string; path: string; query: Record<string, string>; body: string; }) => void) => Promise<void>",
        "parameters": [
          {
            "name": "callback",
            "docs": "",
            "type": "(props: { requestId: string; headers: Record<string, string>; method: string; path: string; query: Record<string, string>; body: string; }) => void"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Record"
        ],
        "slug": "onrequest"
      },
      {
        "name": "sendResponse",
        "signature": "(props: { requestId: string; status: number; body: string; headers: Record<string, string>; }) => Promise<void>",
        "parameters": [
          {
            "name": "props",
            "docs": "",
            "type": "{ requestId: string; status: number; body: string; headers: Record<string, string>; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Record"
        ],
        "slug": "sendresponse"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [
    {
      "name": "Record",
      "slug": "record",
      "docs": "Construct a type with a set of properties K of type T",
      "types": [
        {
          "text": "{\r\n    [P in K]: T;\r\n}",
          "complexTypes": [
            "K",
            "T"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}