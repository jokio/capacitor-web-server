{
  "api": {
    "name": "JokWebServerPlugin",
    "slug": "jokwebserverplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "start",
        "signature": "(props: { deviceName?: string; port?: number; publicFolderPath?: string; apiPath?: string; }) => Promise<boolean>",
        "parameters": [
          {
            "name": "props",
            "docs": "",
            "type": "{ deviceName?: string | undefined; port?: number | undefined; publicFolderPath?: string | undefined; apiPath?: string | undefined; }"
          }
        ],
        "returns": "Promise<boolean>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "start"
      },
      {
        "name": "stop",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "stop"
      },
      {
        "name": "onRequest",
        "signature": "(callback: PluginCallback) => Promise<void>",
        "parameters": [
          {
            "name": "callback",
            "docs": "",
            "type": "PluginCallback"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginCallback"
        ],
        "slug": "onrequest"
      },
      {
        "name": "sendResponse",
        "signature": "(props: { requestId: string; status: number; body: string; headers: Record<string, string>; }) => Promise<void>",
        "parameters": [
          {
            "name": "props",
            "docs": "",
            "type": "{ requestId: string; status: number; body: string; headers: Record<string, string>; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Record"
        ],
        "slug": "sendresponse"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginResultData",
      "slug": "pluginresultdata",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": []
    },
    {
      "name": "PluginResultError",
      "slug": "pluginresulterror",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "message",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "PluginCallback",
      "slug": "plugincallback",
      "docs": "",
      "types": [
        {
          "text": "(data: PluginResultData, error?: PluginResultError | undefined): void",
          "complexTypes": [
            "PluginResultData",
            "PluginResultError"
          ]
        }
      ]
    },
    {
      "name": "Record",
      "slug": "record",
      "docs": "Construct a type with a set of properties K of type T",
      "types": [
        {
          "text": "{\r\n    [P in K]: T;\r\n}",
          "complexTypes": [
            "K",
            "T"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}